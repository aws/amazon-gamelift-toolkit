// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package tools

import (
	"context"
	"github.com/aws/amazon-gamelift-toolkit/fast-build-update-script/internal/gamelift"
	"sync"
)

// GameLiftInstanceAccessGetterMock is a mock implementation of GameLiftInstanceAccessGetter.
//
//	func TestSomethingThatUsesGameLiftInstanceAccessGetter(t *testing.T) {
//
//		// make and configure a mocked GameLiftInstanceAccessGetter
//		mockedGameLiftInstanceAccessGetter := &GameLiftInstanceAccessGetterMock{
//			GetInstanceAccessFunc: func(ctx context.Context, fleetId string, instanceId string) (*gamelift.InstanceAccessCredentials, error) {
//				panic("mock out the GetInstanceAccess method")
//			},
//		}
//
//		// use mockedGameLiftInstanceAccessGetter in code that requires GameLiftInstanceAccessGetter
//		// and then make assertions.
//
//	}
type GameLiftInstanceAccessGetterMock struct {
	// GetInstanceAccessFunc mocks the GetInstanceAccess method.
	GetInstanceAccessFunc func(ctx context.Context, fleetId string, instanceId string) (*gamelift.InstanceAccessCredentials, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetInstanceAccess holds details about calls to the GetInstanceAccess method.
		GetInstanceAccess []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// FleetId is the fleetId argument value.
			FleetId string
			// InstanceId is the instanceId argument value.
			InstanceId string
		}
	}
	lockGetInstanceAccess sync.RWMutex
}

// GetInstanceAccess calls GetInstanceAccessFunc.
func (mock *GameLiftInstanceAccessGetterMock) GetInstanceAccess(ctx context.Context, fleetId string, instanceId string) (*gamelift.InstanceAccessCredentials, error) {
	if mock.GetInstanceAccessFunc == nil {
		panic("GameLiftInstanceAccessGetterMock.GetInstanceAccessFunc: method is nil but GameLiftInstanceAccessGetter.GetInstanceAccess was just called")
	}
	callInfo := struct {
		Ctx        context.Context
		FleetId    string
		InstanceId string
	}{
		Ctx:        ctx,
		FleetId:    fleetId,
		InstanceId: instanceId,
	}
	mock.lockGetInstanceAccess.Lock()
	mock.calls.GetInstanceAccess = append(mock.calls.GetInstanceAccess, callInfo)
	mock.lockGetInstanceAccess.Unlock()
	return mock.GetInstanceAccessFunc(ctx, fleetId, instanceId)
}

// GetInstanceAccessCalls gets all the calls that were made to GetInstanceAccess.
// Check the length with:
//
//	len(mockedGameLiftInstanceAccessGetter.GetInstanceAccessCalls())
func (mock *GameLiftInstanceAccessGetterMock) GetInstanceAccessCalls() []struct {
	Ctx        context.Context
	FleetId    string
	InstanceId string
} {
	var calls []struct {
		Ctx        context.Context
		FleetId    string
		InstanceId string
	}
	mock.lockGetInstanceAccess.RLock()
	calls = mock.calls.GetInstanceAccess
	mock.lockGetInstanceAccess.RUnlock()
	return calls
}
