{
    "Parameters": {
        "commands": [
            "# TODO: Set these to your specific configuration!",
            "FLEET_ID=\"your-fleet-id\"",
            "S3_BUCKET=\"your-bucket-name\"",
            "",
            "# Install java for the GameLift agent",
            "sudo yum install java -y",
            "",
            "# Get the public IP of the instance",
            "TOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")",
            "PUBLIC_IP=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-ipv4)",
            "",
            "# Set the environment variables for the agent",
            "COMPUTE_TYPE=\"ANYWHERE\"",
            "GAME_EXECUTABLE=\"GameLiftSampleServer\"",
            "DATE=$(date +%Y-%m-%d-%H-%M-%S)",
            "echo $DATE",
            "",
            "# Set up the game server run folder similar to managed GameLift",
            "sudo mkdir /local/game",
            "sudo mkdir /local/game/logs",
            "sudo mkdir /local/game/agent",
            "sudo chmod -R 777 /local/game",
            "sudo chmod -R 777 /local/game/logs",
            "sudo chmod -R 777 /local/game/agent",
            "",
            "# Go to game server folder",
            "cd /local/game",
            "",
            "# Get the GameLift agent",
            "aws s3 cp s3://$S3_BUCKET/GameLiftAgent-1.0.jar ./agent",
            "",
            "# Get the latest build",
            "aws s3 cp s3://$S3_BUCKET/AmazonGameLiftSampleServerBinary.zip .",
            "unzip -o AmazonGameLiftSampleServerBinary.zip",
            "",
            "# Terminate the possible previous agent",
            "sudo pkill -f GameLiftAgent",
            "",
            "# Setup CloudWatch Agent for logging",
            "wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm",
            "sudo rpm -U ./amazon-cloudwatch-agent.rpm",
            "# Copy the cloudwatch agent configuration file to the right directory",
            "sudo cp /local/game/amazon-cloudwatch-agent.json /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json",
            "# Start the agent",
            "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s",
            "",
            "# Start the GameLift Agent (nohup to run this in the background)",
            "nohup sudo java -jar agent/GameLiftAgent-1.0.jar -fleet-id $FLEET_ID -compute-name DevCompute-$DATE -region us-east-1 -location custom-mygame-dev-location -ip $PUBLIC_IP 1>/dev/null 2>/dev/null &"
        ]
    }
}